#!/usr/bin/env ruby

require 'sinatra'
require 'slim'
require 'thin'
require 'GeneValidatorApp'
require 'fileutils'
require 'sinatra/base'
require 'sinatra/config_file'
# TODO: do we still need a config file...
##      (was initially put in to stop the browser timing out.)

# AnuragPriyam:
# * check the manner in which temp files are stored and served.

# The Actual App...
class GVapp < Sinatra::Base
  helpers GeneValidatorApp
  set :root, "#{File.dirname(__FILE__)}/../"
  register Sinatra::ConfigFile
  config_file "#{File.dirname(__FILE__)}/../config.yml"

  before do
    puts "\nStarting..."
    @tempdir       = settings.tempdir
    @unique_name   = create_unique_name
    @working_dir   = File.join(@tempdir, @unique_name)
    if File.exist?(@working_dir)
      @unique_name = ensure_unique_name(@working_dir, @tempdir)
    end
    @public_dir    = File.join("#{File.dirname(__FILE__)}", '..', 'public',
                               'GeneValidator', @unique_name)
    if File.exist?(@working_dir)
      raise IOError, 'A unique name cannot be created for this session.'
    end
    unless File.exist?(@tempdir)
      raise IOError, 'The Temporary folder cannot be found.'
    end
  end

  get '/' do
    slim :index
  end

  post '/input' do
    sequences   = params[:seq]
    validations = params[:validations].to_s.gsub(/[\[\]\"]/, '')
    database    = params[:database]

    case database
    when 'sp'
      db = settings.swissprot
    when 'up'
      db = settings.uniprot
    when 'nr'
      db = settings.nr
    end
    FileUtils.mkdir_p @working_dir
    FileUtils.ln_s "#{@working_dir}", "#{@public_dir}"
    sequences = to_fasta(sequences)
    create_fasta_file(@working_dir, sequences)
    run_genevalidator(validations, db, @working_dir, @unique_name)
  end
end

# Do Validations here = So only run once after installation
#  check that GV exists in path
#  check that db exists?

# Use this to supply the names of dbs to the app...
GVapp.set :swissprot, 'sp'
GVapp.set :uniprot, 'up'
GVapp.set :nr, 'nr'
GVapp.set :tempdir, Dir.mktmpdir('GeneValidator_')
GVapp.run!
